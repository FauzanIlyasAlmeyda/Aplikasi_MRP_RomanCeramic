/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kelompok5.kelompok5app.view;

import com.kelompok5.kelompok5app.controller.OrderController;
import com.kelompok5.kelompok5app.model.Order_;
import com.kelompok5.kelompok5app.databaseAcces.BarangCRUD;
import com.kelompok5.kelompok5app.model.Barang;
import com.kelompok5.kelompok5app.databaseAcces.ProdukCRUD;
import com.kelompok5.kelompok5app.model.Produk;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class Order extends javax.swing.JFrame {

    private ProdukCRUD produkCRUD = new ProdukCRUD();

    private OrderController orderController = new OrderController();
    private BarangCRUD barangCRUD = new BarangCRUD();

    public Order() {
        initComponents();
        OrderController controller = new OrderController();
        controller.tampilkanSemuaBarang(TabelOrderBRG);
        controller.tampilkanSemuaProduk(TabelOrderPRD);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bg = new javax.swing.JPanel();
        Header = new javax.swing.JPanel();
        txtHeader = new javax.swing.JLabel();
        BtnPanel = new javax.swing.JPanel();
        BtnProduk = new javax.swing.JButton();
        BtnBarang = new javax.swing.JButton();
        BottomPanel = new javax.swing.JPanel();
        CardPanel = new javax.swing.JPanel();
        CardPanelBRG = new javax.swing.JPanel();
        navbarBRG = new javax.swing.JPanel();
        NavbarContainerBRG = new javax.swing.JPanel();
        BtnPesanBRG = new javax.swing.JButton();
        ScrollTabelBRG = new javax.swing.JScrollPane();
        TabelOrderBRG = new javax.swing.JTable();
        CardPanelPRD = new javax.swing.JPanel();
        navbarPRD = new javax.swing.JPanel();
        NavbarContainerPRD = new javax.swing.JPanel();
        BtnPesanPRD = new javax.swing.JButton();
        PanelSearchPRD = new javax.swing.JPanel();
        txtFieldPRD = new javax.swing.JTextField();
        BtnSearchPRD = new javax.swing.JButton();
        ScrollTabelPRD = new javax.swing.JScrollPane();
        TabelOrderPRD = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        bg.setBackground(new java.awt.Color(153, 153, 153));
        bg.setLayout(new java.awt.BorderLayout());

        Header.setOpaque(false);
        Header.setPreferredSize(new java.awt.Dimension(800, 75));
        Header.setLayout(new java.awt.BorderLayout());

        txtHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtHeader.setText("Order");
        txtHeader.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        Header.add(txtHeader, java.awt.BorderLayout.CENTER);

        BtnPanel.setMinimumSize(new java.awt.Dimension(215, 30));
        BtnPanel.setOpaque(false);
        BtnPanel.setPreferredSize(new java.awt.Dimension(215, 30));
        BtnPanel.setLayout(new java.awt.GridBagLayout());

        BtnProduk.setBackground(new java.awt.Color(0, 0, 0));
        BtnProduk.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnProduk.setForeground(new java.awt.Color(255, 255, 255));
        BtnProduk.setText("Produk");
        BtnProduk.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnProduk.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnProdukActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        BtnPanel.add(BtnProduk, gridBagConstraints);

        BtnBarang.setBackground(new java.awt.Color(0, 0, 0));
        BtnBarang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnBarang.setForeground(new java.awt.Color(255, 255, 255));
        BtnBarang.setText("Barang");
        BtnBarang.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnBarang.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBarangActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        BtnPanel.add(BtnBarang, gridBagConstraints);

        Header.add(BtnPanel, java.awt.BorderLayout.EAST);

        bg.add(Header, java.awt.BorderLayout.PAGE_START);

        BottomPanel.setMinimumSize(new java.awt.Dimension(800, 75));
        BottomPanel.setOpaque(false);
        BottomPanel.setPreferredSize(new java.awt.Dimension(800, 75));
        BottomPanel.setLayout(new java.awt.BorderLayout());

        CardPanel.setMinimumSize(new java.awt.Dimension(800, 425));
        CardPanel.setOpaque(false);
        CardPanel.setPreferredSize(new java.awt.Dimension(800, 425));
        CardPanel.setLayout(new java.awt.CardLayout());

        CardPanelBRG.setOpaque(false);
        CardPanelBRG.setLayout(new java.awt.BorderLayout());

        navbarBRG.setOpaque(false);
        navbarBRG.setLayout(new java.awt.BorderLayout());

        NavbarContainerBRG.setMinimumSize(new java.awt.Dimension(200, 75));
        NavbarContainerBRG.setOpaque(false);
        NavbarContainerBRG.setPreferredSize(new java.awt.Dimension(200, 75));
        NavbarContainerBRG.setLayout(new java.awt.GridBagLayout());

        BtnPesanBRG.setBackground(new java.awt.Color(0, 0, 0));
        BtnPesanBRG.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnPesanBRG.setForeground(new java.awt.Color(255, 255, 255));
        BtnPesanBRG.setText("Buat Pesanan");
        BtnPesanBRG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPesanBRGActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        NavbarContainerBRG.add(BtnPesanBRG, gridBagConstraints);

        navbarBRG.add(NavbarContainerBRG, java.awt.BorderLayout.EAST);

        CardPanelBRG.add(navbarBRG, java.awt.BorderLayout.PAGE_END);

        TabelOrderBRG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nama Barang", "Stok Tersedia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelOrderBRG.setShowGrid(true);
        ScrollTabelBRG.setViewportView(TabelOrderBRG);

        CardPanelBRG.add(ScrollTabelBRG, java.awt.BorderLayout.CENTER);

        CardPanel.add(CardPanelBRG, "card2");

        CardPanelPRD.setOpaque(false);
        CardPanelPRD.setLayout(new java.awt.BorderLayout());

        navbarPRD.setOpaque(false);
        navbarPRD.setLayout(new java.awt.BorderLayout());

        NavbarContainerPRD.setMinimumSize(new java.awt.Dimension(200, 75));
        NavbarContainerPRD.setOpaque(false);
        NavbarContainerPRD.setPreferredSize(new java.awt.Dimension(200, 75));
        NavbarContainerPRD.setLayout(new java.awt.GridBagLayout());

        BtnPesanPRD.setBackground(new java.awt.Color(0, 0, 0));
        BtnPesanPRD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnPesanPRD.setForeground(new java.awt.Color(255, 255, 255));
        BtnPesanPRD.setText("Buat Pesanan");
        BtnPesanPRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPesanPRDActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        NavbarContainerPRD.add(BtnPesanPRD, gridBagConstraints);

        navbarPRD.add(NavbarContainerPRD, java.awt.BorderLayout.EAST);

        PanelSearchPRD.setMinimumSize(new java.awt.Dimension(200, 75));
        PanelSearchPRD.setOpaque(false);
        PanelSearchPRD.setPreferredSize(new java.awt.Dimension(300, 75));
        PanelSearchPRD.setLayout(new java.awt.GridBagLayout());

        txtFieldPRD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFieldPRD.setMinimumSize(new java.awt.Dimension(150, 30));
        txtFieldPRD.setPreferredSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        PanelSearchPRD.add(txtFieldPRD, gridBagConstraints);

        BtnSearchPRD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnSearchPRD.setText("Cari");
        BtnSearchPRD.setMinimumSize(new java.awt.Dimension(75, 25));
        BtnSearchPRD.setPreferredSize(new java.awt.Dimension(75, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        PanelSearchPRD.add(BtnSearchPRD, gridBagConstraints);

        navbarPRD.add(PanelSearchPRD, java.awt.BorderLayout.WEST);

        CardPanelPRD.add(navbarPRD, java.awt.BorderLayout.PAGE_END);

        TabelOrderPRD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nama Produk", "Stok Tersedia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelOrderPRD.setShowGrid(true);
        ScrollTabelPRD.setViewportView(TabelOrderPRD);

        CardPanelPRD.add(ScrollTabelPRD, java.awt.BorderLayout.CENTER);

        CardPanel.add(CardPanelPRD, "card2");

        BottomPanel.add(CardPanel, java.awt.BorderLayout.PAGE_START);

        bg.add(BottomPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(bg, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnPesanBRGActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnPesanBRGActionPerformed
        int selectedRow = TabelOrderBRG.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Silakan pilih barang terlebih dahulu.", "Peringatan",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String namaBarang = TabelOrderBRG.getValueAt(selectedRow, 0).toString();
        List<Barang> listBarang = barangCRUD.getByNama(namaBarang);

        if (listBarang.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Barang tidak ditemukan di database.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        Barang barang = listBarang.get(0);
        String jumlahStr = JOptionPane.showInputDialog(this, "Masukkan jumlah order untuk " + namaBarang + ":");

        if (jumlahStr == null || jumlahStr.trim().isEmpty())
            return;

        try {
            int jumlah = Integer.parseInt(jumlahStr);
            if (jumlah <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah harus lebih dari 0.", "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            String idOrder = orderController.generateId();
            String waktu = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));

            Order_ order = new Order_(idOrder, barang.getId(), jumlah, waktu);
            boolean sukses = orderController.insertOrder(order);

            if (sukses) {
                JOptionPane.showMessageDialog(this, "Pesanan berhasil dibuat!", "Sukses",
                        JOptionPane.INFORMATION_MESSAGE);
                orderController.tampilkanSemuaBarang(TabelOrderBRG);
                ;
            } else {
                JOptionPane.showMessageDialog(this, "Gagal membuat pesanan.", "Gagal", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Input jumlah tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_BtnPesanBRGActionPerformed

    private void BtnProdukActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnProdukActionPerformed
        // TODO add your handling code here:
        CardPanelBRG.setVisible(false);
        CardPanelPRD.setVisible(true);
    }// GEN-LAST:event_BtnProdukActionPerformed

    private void BtnBarangActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnBarangActionPerformed
        // TODO add your handling code here:
        CardPanelBRG.setVisible(true);
        CardPanelPRD.setVisible(false);
    }// GEN-LAST:event_BtnBarangActionPerformed

    private void BtnPesanPRDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnPesanPRDActionPerformed
        int selectedRow = TabelOrderPRD.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Silakan pilih produk terlebih dahulu.", "Peringatan",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String namaProduk = TabelOrderPRD.getValueAt(selectedRow, 0).toString();
        List<Produk> listProduk = produkCRUD.getByNama(namaProduk);

        if (listProduk.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Produk tidak ditemukan di database.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        Produk produk = listProduk.get(0);
        String jumlahStr = JOptionPane.showInputDialog(this, "Masukkan jumlah order untuk " + namaProduk + ":");

        if (jumlahStr == null || jumlahStr.trim().isEmpty())
            return;

        try {
            int jumlah = Integer.parseInt(jumlahStr);
            if (jumlah <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah harus lebih dari 0.", "Peringatan",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            String idOrder = orderController.generateId();
            String waktu = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));

            Order_ order = new Order_(idOrder, produk.getId(), jumlah, waktu);
            boolean sukses = orderController.insertOrderProduk(order);

            if (sukses) {
                JOptionPane.showMessageDialog(this, "Pesanan produk berhasil dibuat!", "Sukses",
                        JOptionPane.INFORMATION_MESSAGE);
                orderController.tampilkanSemuaProduk(TabelOrderPRD);
            } else {
                JOptionPane.showMessageDialog(this, "Gagal membuat pesanan produk.", "Gagal",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Input jumlah tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_BtnPesanPRDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BottomPanel;
    private javax.swing.JButton BtnBarang;
    private javax.swing.JPanel BtnPanel;
    private javax.swing.JButton BtnPesanBRG;
    private javax.swing.JButton BtnPesanPRD;
    private javax.swing.JButton BtnProduk;
    private javax.swing.JButton BtnSearchPRD;
    private javax.swing.JPanel CardPanel;
    private javax.swing.JPanel CardPanelBRG;
    private javax.swing.JPanel CardPanelPRD;
    private javax.swing.JPanel Header;
    private javax.swing.JPanel NavbarContainerBRG;
    private javax.swing.JPanel NavbarContainerPRD;
    private javax.swing.JPanel PanelSearchPRD;
    private javax.swing.JScrollPane ScrollTabelBRG;
    private javax.swing.JScrollPane ScrollTabelPRD;
    private javax.swing.JTable TabelOrderBRG;
    private javax.swing.JTable TabelOrderPRD;
    private javax.swing.JPanel bg;
    private javax.swing.JPanel navbarBRG;
    private javax.swing.JPanel navbarPRD;
    private javax.swing.JTextField txtFieldPRD;
    private javax.swing.JLabel txtHeader;
    // End of variables declaration//GEN-END:variables
}
