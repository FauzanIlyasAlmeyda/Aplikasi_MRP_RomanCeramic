/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kelompok5.kelompok5app.view;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class DasboardAdmin extends javax.swing.JFrame {

    /**
     * Creates new form DasboardAdminW
     */
    public DasboardAdmin() {
        initComponents();
        // Set Layout untuk CardPanel menjadi CardLayout
CardPanel.setLayout(new java.awt.CardLayout());

// Menambahkan CardTabelBarang ke CardPanel dengan ID "card1" untuk tabel barang
CardPanel.add(CardTabelBarang, "card1");

// Menambahkan CardTabelProduk ke CardPanel dengan ID "card3" untuk tabel produk
CardPanel.add(CardTabelProduk, "card2");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bg = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        textadm = new javax.swing.JLabel();
        BtnPanel = new javax.swing.JPanel();
        BtnDel = new javax.swing.JButton();
        BtnEdit = new javax.swing.JButton();
        BtnAdd = new javax.swing.JButton();
        BtnProduk = new javax.swing.JButton();
        Bottompanel = new javax.swing.JPanel();
        CardPanel = new javax.swing.JPanel();
        CardTabelBarang = new javax.swing.JPanel();
        ScrollTabelBarang = new javax.swing.JScrollPane();
        TabelBarang = new javax.swing.JTable();
        CardTabelProduk = new javax.swing.JPanel();
        ScrollTabelProduk = new javax.swing.JScrollPane();
        TabelProduk = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));

        bg.setBackground(new java.awt.Color(153, 153, 153));
        bg.setMinimumSize(new java.awt.Dimension(800, 500));
        bg.setPreferredSize(new java.awt.Dimension(800, 500));
        bg.setLayout(new java.awt.BorderLayout());

        header.setMinimumSize(new java.awt.Dimension(800, 75));
        header.setOpaque(false);
        header.setPreferredSize(new java.awt.Dimension(800, 75));
        header.setLayout(new java.awt.BorderLayout());

        textadm.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        textadm.setText("Admin");
        textadm.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        header.add(textadm, java.awt.BorderLayout.WEST);

        BtnPanel.setMinimumSize(new java.awt.Dimension(415, 30));
        BtnPanel.setOpaque(false);
        BtnPanel.setPreferredSize(new java.awt.Dimension(415, 30));
        BtnPanel.setLayout(new java.awt.GridBagLayout());

        BtnDel.setBackground(new java.awt.Color(0, 0, 0));
        BtnDel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnDel.setForeground(new java.awt.Color(255, 255, 255));
        BtnDel.setText("Hapus");
        BtnDel.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnDel.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        BtnPanel.add(BtnDel, gridBagConstraints);

        BtnEdit.setBackground(new java.awt.Color(0, 0, 0));
        BtnEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnEdit.setForeground(new java.awt.Color(255, 255, 255));
        BtnEdit.setText("Edit");
        BtnEdit.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnEdit.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        BtnPanel.add(BtnEdit, gridBagConstraints);

        BtnAdd.setBackground(new java.awt.Color(0, 0, 0));
        BtnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnAdd.setForeground(new java.awt.Color(255, 255, 255));
        BtnAdd.setText("Tambah");
        BtnAdd.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnAdd.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        BtnPanel.add(BtnAdd, gridBagConstraints);

        BtnProduk.setBackground(new java.awt.Color(0, 0, 0));
        BtnProduk.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnProduk.setForeground(new java.awt.Color(255, 255, 255));
        BtnProduk.setText("Produk");
        BtnProduk.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnProduk.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnProdukActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        BtnPanel.add(BtnProduk, gridBagConstraints);

        header.add(BtnPanel, java.awt.BorderLayout.EAST);

        bg.add(header, java.awt.BorderLayout.PAGE_START);

        Bottompanel.setLayout(new java.awt.BorderLayout());

        CardPanel.setMinimumSize(new java.awt.Dimension(800, 425));
        CardPanel.setOpaque(false);
        CardPanel.setPreferredSize(new java.awt.Dimension(800, 425));
        CardPanel.setLayout(new java.awt.CardLayout());

        CardTabelBarang.setMinimumSize(new java.awt.Dimension(800, 425));
        CardTabelBarang.setPreferredSize(new java.awt.Dimension(800, 425));
        CardTabelBarang.setLayout(new java.awt.BorderLayout());

        ScrollTabelBarang.setMinimumSize(new java.awt.Dimension(800, 425));
        ScrollTabelBarang.setPreferredSize(new java.awt.Dimension(800, 425));

        TabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode barang", "Nama Barang", "Kategori", "Min Stok", "Maks Stok", "Stok", "Order", "Vendor", "Tanggal Diperbarui"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelBarang.setMinimumSize(new java.awt.Dimension(800, 425));
        TabelBarang.setPreferredSize(new java.awt.Dimension(800, 425));
        TabelBarang.setShowHorizontalLines(true);
        TabelBarang.setShowVerticalLines(true);
        ScrollTabelBarang.setViewportView(TabelBarang);

        CardTabelBarang.add(ScrollTabelBarang, java.awt.BorderLayout.CENTER);

        CardPanel.add(CardTabelBarang, "card1");

        CardTabelProduk.setMinimumSize(new java.awt.Dimension(800, 425));
        CardTabelProduk.setPreferredSize(new java.awt.Dimension(800, 425));
        CardTabelProduk.setLayout(new java.awt.BorderLayout());

        ScrollTabelProduk.setMinimumSize(new java.awt.Dimension(800, 425));
        ScrollTabelProduk.setPreferredSize(new java.awt.Dimension(800, 425));

        TabelProduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id_Produk", "Nama_Produk", "Kategori", "Stok"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelProduk.setMinimumSize(new java.awt.Dimension(800, 425));
        TabelProduk.setPreferredSize(new java.awt.Dimension(800, 425));
        TabelProduk.setShowGrid(true);
        ScrollTabelProduk.setViewportView(TabelProduk);

        CardTabelProduk.add(ScrollTabelProduk, java.awt.BorderLayout.CENTER);

        CardPanel.add(CardTabelProduk, "card2");

        Bottompanel.add(CardPanel, java.awt.BorderLayout.PAGE_START);

        bg.add(Bottompanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(bg, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDelActionPerformed
        // TODO add your handling code here:
         int selectedRow = TabelBarang.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (konfirmasi == JOptionPane.YES_OPTION) {
        DefaultTableModel model = (DefaultTableModel) TabelBarang.getModel();
        model.removeRow(selectedRow);
    }
    }//GEN-LAST:event_BtnDelActionPerformed

    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) TabelBarang.getModel();

    // Input dialog untuk setiap kolom
    String kode = JOptionPane.showInputDialog(this, "Masukkan Kode Barang:");
    if (kode == null || kode.trim().isEmpty()) return;

    String nama = JOptionPane.showInputDialog(this, "Masukkan Nama Barang:");
    if (nama == null || nama.trim().isEmpty()) return;
    
    String kategori = JOptionPane.showInputDialog(this, "Masukkan Kategori Barang:");
    if (kategori == null || kategori.trim().isEmpty()) return;

    String minStok = JOptionPane.showInputDialog(this, "Masukkan Min Stok:");
    if (minStok == null || minStok.trim().isEmpty()) return;

    String maksStok = JOptionPane.showInputDialog(this, "Masukkan Maks Stok:");
    if (maksStok == null || maksStok.trim().isEmpty()) return;

    String stok = JOptionPane.showInputDialog(this, "Masukkan Stok Saat Ini:");
    if (stok == null || stok.trim().isEmpty()) return;

    String order = JOptionPane.showInputDialog(this, "Masukkan Order:");
    if (order == null || order.trim().isEmpty()) return;

    String vendor = JOptionPane.showInputDialog(this, "Masukkan Vendor:");
    if (vendor == null || vendor.trim().isEmpty()) return;

    String tanggal = JOptionPane.showInputDialog(this, "Masukkan Tanggal Diperbarui (YYYY-MM-DD):");
    if (tanggal == null || tanggal.trim().isEmpty()) return;

    // Tambahkan ke tabel
    model.addRow(new Object[]{kode, nama, minStok, maksStok, stok, order, vendor, tanggal});
    }//GEN-LAST:event_BtnAddActionPerformed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = TabelBarang.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    DefaultTableModel model = (DefaultTableModel) TabelBarang.getModel();

    // Ambil data lama
    String kode = (String) model.getValueAt(selectedRow, 0);
    String nama = (String) model.getValueAt(selectedRow, 1);
    String kategori = (String) model.getValueAt(selectedRow, 2);
    String minStok = (String) model.getValueAt(selectedRow, 3);
    String maksStok = (String) model.getValueAt(selectedRow, 4);
    String stok = (String) model.getValueAt(selectedRow, 5);
    String order = (String) model.getValueAt(selectedRow, 6);
    String vendor = (String) model.getValueAt(selectedRow, 7);
    String tanggal = (String) model.getValueAt(selectedRow, 8);

    // Dialog edit per kolom
    kode = JOptionPane.showInputDialog(this, "Edit Kode Barang:", kode);
    nama = JOptionPane.showInputDialog(this, "Edit Nama Barang:", nama);
    kategori = JOptionPane.showInputDialog(this, "Edit Kategori Barang:");
    minStok = JOptionPane.showInputDialog(this, "Edit Min Stok:", minStok);
    maksStok = JOptionPane.showInputDialog(this, "Edit Maks Stok:", maksStok);
    stok = JOptionPane.showInputDialog(this, "Edit Stok:", stok);
    order = JOptionPane.showInputDialog(this, "Edit Order:", order);
    vendor = JOptionPane.showInputDialog(this, "Edit Vendor:", vendor);
    tanggal = JOptionPane.showInputDialog(this, "Edit Tanggal Diperbarui:", tanggal);
    

    // Set nilai baru ke tabel
    model.setValueAt(kode, selectedRow, 0);
    model.setValueAt(nama, selectedRow, 1);
    model.setValueAt(kategori, selectedRow, 2);
    model.setValueAt(minStok, selectedRow, 3);
    model.setValueAt(maksStok, selectedRow, 4);
    model.setValueAt(stok, selectedRow, 5);
    model.setValueAt(order, selectedRow, 6);
    model.setValueAt(vendor, selectedRow, 7);
    model.setValueAt(tanggal, selectedRow, 8);
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnProdukActionPerformed
        // TODO add your handling code here:
        CardLayout cl = (CardLayout) Bottompanel.getLayout();
    cl.show(Bottompanel, "card2");
    }//GEN-LAST:event_BtnProdukActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DasboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DasboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DasboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DasboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DasboardAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Bottompanel;
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnDel;
    private javax.swing.JButton BtnEdit;
    private javax.swing.JPanel BtnPanel;
    private javax.swing.JButton BtnProduk;
    private javax.swing.JPanel CardPanel;
    private javax.swing.JPanel CardTabelBarang;
    private javax.swing.JPanel CardTabelProduk;
    private javax.swing.JScrollPane ScrollTabelBarang;
    private javax.swing.JScrollPane ScrollTabelProduk;
    private javax.swing.JTable TabelBarang;
    private javax.swing.JTable TabelProduk;
    private javax.swing.JPanel bg;
    private javax.swing.JPanel header;
    private javax.swing.JLabel textadm;
    // End of variables declaration//GEN-END:variables
}
