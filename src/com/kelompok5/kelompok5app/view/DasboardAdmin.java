/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kelompok5.kelompok5app.view;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class DasboardAdmin extends javax.swing.JFrame {

    /**
     * Creates new form DasboardAdminW
     */
    public DasboardAdmin() {
        initComponents();
        // Set Layout untuk CardPanel menjadi CardLayout
CardPanel.setLayout(new java.awt.CardLayout());

// Menambahkan CardTabelBarang ke CardPanel dengan ID "card1" untuk tabel barang
CardPanel.add(CardTabelBarang, "card1");

// Menambahkan CardTabelProduk ke CardPanel dengan ID "card3" untuk tabel produk
CardPanel.add(CardTabelProduk, "card2");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bg = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        textadm = new javax.swing.JLabel();
        BtnPanel = new javax.swing.JPanel();
        BtnProduk = new javax.swing.JButton();
        BtnBarang = new javax.swing.JButton();
        Bottompanel = new javax.swing.JPanel();
        CardPanel = new javax.swing.JPanel();
        CardTabelProduk = new javax.swing.JPanel();
        ScrollTabelProduk = new javax.swing.JScrollPane();
        TabelProduk = new javax.swing.JTable();
        navbarProduk = new javax.swing.JPanel();
        navbarContainerP = new javax.swing.JPanel();
        BtnAddP = new javax.swing.JButton();
        BtnEditP = new javax.swing.JButton();
        BtnDelP = new javax.swing.JButton();
        BtnLogoutP = new javax.swing.JButton();
        txtJudulProduk = new javax.swing.JLabel();
        CardTabelBarang = new javax.swing.JPanel();
        navbarBarang = new javax.swing.JPanel();
        navbarContainerB = new javax.swing.JPanel();
        BtnAddB = new javax.swing.JButton();
        BtnEditB = new javax.swing.JButton();
        BtnDelB = new javax.swing.JButton();
        BtnLogoutB = new javax.swing.JButton();
        txtJudulBarang = new javax.swing.JLabel();
        ScrollTabelBarang = new javax.swing.JScrollPane();
        TabelBarang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));

        bg.setBackground(new java.awt.Color(153, 153, 153));
        bg.setMinimumSize(new java.awt.Dimension(800, 500));
        bg.setPreferredSize(new java.awt.Dimension(800, 500));
        bg.setLayout(new java.awt.BorderLayout());

        header.setMinimumSize(new java.awt.Dimension(800, 75));
        header.setOpaque(false);
        header.setPreferredSize(new java.awt.Dimension(800, 75));
        header.setLayout(new java.awt.BorderLayout());

        textadm.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        textadm.setText("Admin");
        textadm.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        header.add(textadm, java.awt.BorderLayout.WEST);

        BtnPanel.setMinimumSize(new java.awt.Dimension(215, 30));
        BtnPanel.setOpaque(false);
        BtnPanel.setPreferredSize(new java.awt.Dimension(215, 30));
        BtnPanel.setLayout(new java.awt.GridBagLayout());

        BtnProduk.setBackground(new java.awt.Color(0, 0, 0));
        BtnProduk.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnProduk.setForeground(new java.awt.Color(255, 255, 255));
        BtnProduk.setText("Produk");
        BtnProduk.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnProduk.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnProdukActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        BtnPanel.add(BtnProduk, gridBagConstraints);

        BtnBarang.setBackground(new java.awt.Color(0, 0, 0));
        BtnBarang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnBarang.setForeground(new java.awt.Color(255, 255, 255));
        BtnBarang.setText("Barang");
        BtnBarang.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnBarang.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBarangActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        BtnPanel.add(BtnBarang, gridBagConstraints);

        header.add(BtnPanel, java.awt.BorderLayout.EAST);

        bg.add(header, java.awt.BorderLayout.PAGE_START);

        Bottompanel.setLayout(new java.awt.BorderLayout());

        CardPanel.setMinimumSize(new java.awt.Dimension(800, 425));
        CardPanel.setOpaque(false);
        CardPanel.setPreferredSize(new java.awt.Dimension(800, 425));
        CardPanel.setLayout(new java.awt.CardLayout());

        CardTabelProduk.setMinimumSize(new java.awt.Dimension(800, 425));
        CardTabelProduk.setPreferredSize(new java.awt.Dimension(800, 425));
        CardTabelProduk.setLayout(new java.awt.BorderLayout());

        ScrollTabelProduk.setMinimumSize(new java.awt.Dimension(800, 425));
        ScrollTabelProduk.setPreferredSize(new java.awt.Dimension(800, 425));

        TabelProduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id_Produk", "Nama_Produk", "Material_Produk", "Stok"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelProduk.setMinimumSize(new java.awt.Dimension(800, 425));
        TabelProduk.setPreferredSize(new java.awt.Dimension(800, 425));
        TabelProduk.setShowGrid(true);
        ScrollTabelProduk.setViewportView(TabelProduk);

        CardTabelProduk.add(ScrollTabelProduk, java.awt.BorderLayout.CENTER);

        navbarProduk.setMinimumSize(new java.awt.Dimension(800, 75));
        navbarProduk.setPreferredSize(new java.awt.Dimension(500, 75));
        navbarProduk.setLayout(new java.awt.BorderLayout());

        navbarContainerP.setLayout(new java.awt.GridBagLayout());

        BtnAddP.setBackground(new java.awt.Color(0, 0, 0));
        BtnAddP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnAddP.setForeground(new java.awt.Color(255, 255, 255));
        BtnAddP.setText("Tambah");
        BtnAddP.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnAddP.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnAddP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddPActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        navbarContainerP.add(BtnAddP, gridBagConstraints);

        BtnEditP.setBackground(new java.awt.Color(0, 0, 0));
        BtnEditP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnEditP.setForeground(new java.awt.Color(255, 255, 255));
        BtnEditP.setText("Edit");
        BtnEditP.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnEditP.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnEditP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditPActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        navbarContainerP.add(BtnEditP, gridBagConstraints);

        BtnDelP.setBackground(new java.awt.Color(0, 0, 0));
        BtnDelP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnDelP.setForeground(new java.awt.Color(255, 255, 255));
        BtnDelP.setText("Hapus");
        BtnDelP.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnDelP.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnDelP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDelPActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        navbarContainerP.add(BtnDelP, gridBagConstraints);

        BtnLogoutP.setBackground(new java.awt.Color(0, 0, 0));
        BtnLogoutP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnLogoutP.setForeground(new java.awt.Color(255, 255, 255));
        BtnLogoutP.setText("Keluar");
        BtnLogoutP.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnLogoutP.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnLogoutP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogoutPActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        navbarContainerP.add(BtnLogoutP, gridBagConstraints);

        navbarProduk.add(navbarContainerP, java.awt.BorderLayout.EAST);

        txtJudulProduk.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        txtJudulProduk.setText("Tabel Produk");
        txtJudulProduk.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        navbarProduk.add(txtJudulProduk, java.awt.BorderLayout.CENTER);

        CardTabelProduk.add(navbarProduk, java.awt.BorderLayout.SOUTH);

        CardPanel.add(CardTabelProduk, "card2");

        CardTabelBarang.setMinimumSize(new java.awt.Dimension(800, 425));
        CardTabelBarang.setPreferredSize(new java.awt.Dimension(800, 425));
        CardTabelBarang.setLayout(new java.awt.BorderLayout());

        navbarBarang.setMinimumSize(new java.awt.Dimension(800, 75));
        navbarBarang.setPreferredSize(new java.awt.Dimension(500, 75));
        navbarBarang.setLayout(new java.awt.BorderLayout());

        navbarContainerB.setLayout(new java.awt.GridBagLayout());

        BtnAddB.setBackground(new java.awt.Color(0, 0, 0));
        BtnAddB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnAddB.setForeground(new java.awt.Color(255, 255, 255));
        BtnAddB.setText("Tambah");
        BtnAddB.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnAddB.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnAddB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        navbarContainerB.add(BtnAddB, gridBagConstraints);

        BtnEditB.setBackground(new java.awt.Color(0, 0, 0));
        BtnEditB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnEditB.setForeground(new java.awt.Color(255, 255, 255));
        BtnEditB.setText("Edit");
        BtnEditB.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnEditB.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnEditB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        navbarContainerB.add(BtnEditB, gridBagConstraints);

        BtnDelB.setBackground(new java.awt.Color(0, 0, 0));
        BtnDelB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnDelB.setForeground(new java.awt.Color(255, 255, 255));
        BtnDelB.setText("Hapus");
        BtnDelB.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnDelB.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnDelB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDelBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        navbarContainerB.add(BtnDelB, gridBagConstraints);

        BtnLogoutB.setBackground(new java.awt.Color(0, 0, 0));
        BtnLogoutB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnLogoutB.setForeground(new java.awt.Color(255, 255, 255));
        BtnLogoutB.setText("Keluar");
        BtnLogoutB.setMinimumSize(new java.awt.Dimension(85, 30));
        BtnLogoutB.setPreferredSize(new java.awt.Dimension(85, 30));
        BtnLogoutB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogoutBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        navbarContainerB.add(BtnLogoutB, gridBagConstraints);

        navbarBarang.add(navbarContainerB, java.awt.BorderLayout.EAST);

        txtJudulBarang.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        txtJudulBarang.setText("Tabel Barang");
        txtJudulBarang.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        navbarBarang.add(txtJudulBarang, java.awt.BorderLayout.CENTER);

        CardTabelBarang.add(navbarBarang, java.awt.BorderLayout.SOUTH);

        ScrollTabelBarang.setMinimumSize(new java.awt.Dimension(800, 425));
        ScrollTabelBarang.setPreferredSize(new java.awt.Dimension(800, 425));

        TabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode barang", "Nama Barang", "Kategori", "Min Stok", "Maks Stok", "Stok", "Order", "Vendor", "Tanggal Diperbarui"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelBarang.setMinimumSize(new java.awt.Dimension(800, 425));
        TabelBarang.setPreferredSize(new java.awt.Dimension(800, 425));
        TabelBarang.setShowHorizontalLines(true);
        TabelBarang.setShowVerticalLines(true);
        ScrollTabelBarang.setViewportView(TabelBarang);

        CardTabelBarang.add(ScrollTabelBarang, java.awt.BorderLayout.CENTER);

        CardPanel.add(CardTabelBarang, "card1");

        Bottompanel.add(CardPanel, java.awt.BorderLayout.CENTER);

        bg.add(Bottompanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(bg, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnDelBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDelBActionPerformed
        // TODO add your handling code here:
         int selectedRow = TabelBarang.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (konfirmasi == JOptionPane.YES_OPTION) {
        DefaultTableModel model = (DefaultTableModel) TabelBarang.getModel();
        model.removeRow(selectedRow);
    }
    }//GEN-LAST:event_BtnDelBActionPerformed

    private void BtnAddBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddBActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) TabelBarang.getModel();

    // Input dialog untuk setiap kolom
    String kode = JOptionPane.showInputDialog(this, "Masukkan Kode Barang:");
    if (kode == null || kode.trim().isEmpty()) return;

    String nama = JOptionPane.showInputDialog(this, "Masukkan Nama Barang:");
    if (nama == null || nama.trim().isEmpty()) return;
    
    String kategori = JOptionPane.showInputDialog(this, "Masukkan Kategori Barang:");
    if (kategori == null || kategori.trim().isEmpty()) return;

    String minStok = JOptionPane.showInputDialog(this, "Masukkan Min Stok:");
    if (minStok == null || minStok.trim().isEmpty()) return;

    String maksStok = JOptionPane.showInputDialog(this, "Masukkan Maks Stok:");
    if (maksStok == null || maksStok.trim().isEmpty()) return;

    String stok = JOptionPane.showInputDialog(this, "Masukkan Stok Saat Ini:");
    if (stok == null || stok.trim().isEmpty()) return;

    String order = JOptionPane.showInputDialog(this, "Masukkan Order:");
    if (order == null || order.trim().isEmpty()) return;

    String vendor = JOptionPane.showInputDialog(this, "Masukkan Vendor:");
    if (vendor == null || vendor.trim().isEmpty()) return;

    String tanggal = JOptionPane.showInputDialog(this, "Masukkan Tanggal Diperbarui (YYYY-MM-DD):");
    if (tanggal == null || tanggal.trim().isEmpty()) return;

    // Tambahkan ke tabel
    model.addRow(new Object[]{kode, nama, minStok, maksStok, stok, order, vendor, tanggal});
    }//GEN-LAST:event_BtnAddBActionPerformed

    private void BtnEditBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditBActionPerformed
        // TODO add your handling code here:
        int selectedRow = TabelBarang.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    DefaultTableModel model = (DefaultTableModel) TabelBarang.getModel();

    // Ambil data lama
    String kode = (String) model.getValueAt(selectedRow, 0);
    String nama = (String) model.getValueAt(selectedRow, 1);
    String kategori = (String) model.getValueAt(selectedRow, 2);
    String minStok = (String) model.getValueAt(selectedRow, 3);
    String maksStok = (String) model.getValueAt(selectedRow, 4);
    String stok = (String) model.getValueAt(selectedRow, 5);
    String order = (String) model.getValueAt(selectedRow, 6);
    String vendor = (String) model.getValueAt(selectedRow, 7);
    String tanggal = (String) model.getValueAt(selectedRow, 8);

    // Dialog edit per kolom
    kode = JOptionPane.showInputDialog(this, "Edit Kode Barang:", kode);
    nama = JOptionPane.showInputDialog(this, "Edit Nama Barang:", nama);
    kategori = JOptionPane.showInputDialog(this, "Edit Kategori Barang:");
    minStok = JOptionPane.showInputDialog(this, "Edit Min Stok:", minStok);
    maksStok = JOptionPane.showInputDialog(this, "Edit Maks Stok:", maksStok);
    stok = JOptionPane.showInputDialog(this, "Edit Stok:", stok);
    order = JOptionPane.showInputDialog(this, "Edit Order:", order);
    vendor = JOptionPane.showInputDialog(this, "Edit Vendor:", vendor);
    tanggal = JOptionPane.showInputDialog(this, "Edit Tanggal Diperbarui:", tanggal);
    

    // Set nilai baru ke tabel
    model.setValueAt(kode, selectedRow, 0);
    model.setValueAt(nama, selectedRow, 1);
    model.setValueAt(kategori, selectedRow, 2);
    model.setValueAt(minStok, selectedRow, 3);
    model.setValueAt(maksStok, selectedRow, 4);
    model.setValueAt(stok, selectedRow, 5);
    model.setValueAt(order, selectedRow, 6);
    model.setValueAt(vendor, selectedRow, 7);
    model.setValueAt(tanggal, selectedRow, 8);
    }//GEN-LAST:event_BtnEditBActionPerformed

    private void BtnProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnProdukActionPerformed
        // TODO add your handling code here:
        CardTabelProduk.setVisible(true);
        CardTabelBarang.setVisible(false);
    }//GEN-LAST:event_BtnProdukActionPerformed

    private void BtnBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBarangActionPerformed
        // TODO add your handling code here:
        CardTabelProduk.setVisible(false);
        CardTabelBarang.setVisible(true);
    }//GEN-LAST:event_BtnBarangActionPerformed

    private void BtnAddPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddPActionPerformed
        // TODO add your handling code here:
        String kodeProduk = JOptionPane.showInputDialog(this, "Masukkan Kode Produk:");
    if (kodeProduk == null || kodeProduk.trim().isEmpty()) return;

    // Input dialog untuk Nama Produk
    String namaProduk = JOptionPane.showInputDialog(this, "Masukkan Nama Produk:");
    if (namaProduk == null || namaProduk.trim().isEmpty()) return;
    
    // Material Produk dengan pemisah baris baru (Enter)
    String materialProduk = JOptionPane.showInputDialog(this, "Masukkan Material Produk:");
    if (materialProduk == null || materialProduk.trim().isEmpty()) return;

    // Input dialog untuk Stok Produk
    String stok = JOptionPane.showInputDialog(this, "Masukkan Stok Produk:");
    if (stok == null || stok.trim().isEmpty()) return;

    // Menambahkan produk baru ke dalam tabel
    DefaultTableModel model = (DefaultTableModel) TabelProduk.getModel();
    model.addRow(new Object[]{kodeProduk, namaProduk, materialProduk, stok});
    }//GEN-LAST:event_BtnAddPActionPerformed

    private void BtnEditPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditPActionPerformed
        // TODO add your handling code here:
          int selectedRow = TabelProduk.getSelectedRow();
    
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    DefaultTableModel model = (DefaultTableModel) TabelProduk.getModel();
    
    // Ambil data yang ada pada baris yang dipilih
    String kodeProduk = (String) model.getValueAt(selectedRow, 0);
    String namaProduk = (String) model.getValueAt(selectedRow, 1);
    String materialProduk = (String) model.getValueAt(selectedRow, 2);  // Ambil material_produk yang ada
    String stok = (String) model.getValueAt(selectedRow, 3);

    // Dialog edit per kolom
    kodeProduk = JOptionPane.showInputDialog(this, "Edit Kode Produk:", kodeProduk);
    namaProduk = JOptionPane.showInputDialog(this, "Edit Nama Produk:", namaProduk);
    materialProduk = JOptionPane.showInputDialog(this, "Edit Material Produk:", materialProduk);
    stok = JOptionPane.showInputDialog(this, "Edit Stok Produk:", stok);

    // Update nilai produk pada tabel
    model.setValueAt(kodeProduk, selectedRow, 0);
    model.setValueAt(namaProduk, selectedRow, 1);
    model.setValueAt(materialProduk, selectedRow, 2);  // Update material_produk
    model.setValueAt(stok, selectedRow, 3);
    }//GEN-LAST:event_BtnEditPActionPerformed

    private void BtnDelPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDelPActionPerformed
        // TODO add your handling code here:
        int selectedRow = TabelProduk.getSelectedRow();

    // Cek jika tidak ada baris yang dipilih
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Konfirmasi penghapusan data
    int konfirmasi = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    
    // Jika konfirmasi "YES", hapus baris yang dipilih
    if (konfirmasi == JOptionPane.YES_OPTION) {
        DefaultTableModel model = (DefaultTableModel) TabelProduk.getModel();
        model.removeRow(selectedRow);  // Menghapus baris yang dipilih
    }
    }//GEN-LAST:event_BtnDelPActionPerformed

    private void BtnLogoutPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogoutPActionPerformed
        // TODO add your handling code here:
         new login().setVisible(true);

        // Menutup frame DetailLaporanBarang
        dispose();
    }//GEN-LAST:event_BtnLogoutPActionPerformed

    private void BtnLogoutBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogoutBActionPerformed
        // TODO add your handling code here:
         new login().setVisible(true);

        // Menutup frame DetailLaporanBarang
        dispose();
    }//GEN-LAST:event_BtnLogoutBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DasboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DasboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DasboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DasboardAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DasboardAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Bottompanel;
    private javax.swing.JButton BtnAddB;
    private javax.swing.JButton BtnAddP;
    private javax.swing.JButton BtnBarang;
    private javax.swing.JButton BtnDelB;
    private javax.swing.JButton BtnDelP;
    private javax.swing.JButton BtnEditB;
    private javax.swing.JButton BtnEditP;
    private javax.swing.JButton BtnLogoutB;
    private javax.swing.JButton BtnLogoutP;
    private javax.swing.JPanel BtnPanel;
    private javax.swing.JButton BtnProduk;
    private javax.swing.JPanel CardPanel;
    private javax.swing.JPanel CardTabelBarang;
    private javax.swing.JPanel CardTabelProduk;
    private javax.swing.JScrollPane ScrollTabelBarang;
    private javax.swing.JScrollPane ScrollTabelProduk;
    private javax.swing.JTable TabelBarang;
    private javax.swing.JTable TabelProduk;
    private javax.swing.JPanel bg;
    private javax.swing.JPanel header;
    private javax.swing.JPanel navbarBarang;
    private javax.swing.JPanel navbarContainerB;
    private javax.swing.JPanel navbarContainerP;
    private javax.swing.JPanel navbarProduk;
    private javax.swing.JLabel textadm;
    private javax.swing.JLabel txtJudulBarang;
    private javax.swing.JLabel txtJudulProduk;
    // End of variables declaration//GEN-END:variables
}
